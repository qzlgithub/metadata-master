<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mingdong.bop.domain.mapper.ClientAccountTradeMapper">
    <resultMap id="BaseResultMap" type="ClientAccountTrade">
        <id column="id" property="id" jdbcType="BIGINT" />
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
        <result column="trade_no" property="tradeNo" jdbcType="VARCHAR" />
        <result column="income" property="income" jdbcType="TINYINT" />
        <result column="trade_type" property="tradeType" jdbcType="TINYINT" />
        <result column="amount" property="amount" jdbcType="DECIMAL" />
        <result column="balance" property="balance" jdbcType="DECIMAL" />
        <result column="user_id" property="managerId" jdbcType="BIGINT" />
        <result column="remark" property="remark" jdbcType="VARCHAR" />
    </resultMap>

    <insert id="add" parameterType="ClientAccountTrade">
        insert into `client_account_trade`
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">`id`,</if>
            <if test="createTime != null">`create_time`,</if>
            <if test="updateTime != null">`update_time`,</if>
            <if test="tradeNo != null">`trade_no`,</if>
            <if test="income != null">`income`,</if>
            <if test="tradeType != null">`trade_type`,</if>
            <if test="amount != null">`amount`,</if>
            <if test="balance != null">`balance`,</if>
            <if test="managerId != null">`user_id`,</if>
            <if test="remark != null">`remark`,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">#{id},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateTime != null">#{updateTime},</if>
            <if test="tradeNo != null">#{tradeNo},</if>
            <if test="income != null">#{income},</if>
            <if test="tradeType != null">#{tradeType},</if>
            <if test="amount != null">#{amount},</if>
            <if test="balance != null">#{balance},</if>
            <if test="managerId != null">#{managerId},</if>
            <if test="remark != null">#{remark},</if>
        </trim>
    </insert>

    <update id="updateById" parameterType="ClientAccountTrade">
        update client_account_trade set `create_time` = #{createTime}, `update_time` = #{updateTime}, `trade_no` =
        #{tradeNo}, `income` = #{income}, `trade_type` = #{tradeType}, `amount` = #{amount}, `balance` = #{balance},
        manager_id = #{managerId}, `remark` = #{remark} where `id` = #{id}
    </update>

    <update id="updateSkipNull" parameterType="ClientAccountTrade">
        update client_account_trade
        <set>
            <if test="createTime != null">`create_time` = #{createTime},</if>
            <if test="updateTime != null">`update_time` = #{updateTime},</if>
            <if test="tradeNo != null">`trade_no` = #{tradeNo},</if>
            <if test="income != null">`income` = #{income},</if>
            <if test="tradeType != null">`trade_type` = #{tradeType},</if>
            <if test="amount != null">`amount` = #{amount},</if>
            <if test="enabled != null">`balance` = #{enabled},</if>
            <if test="managerId != null">`user_id` = #{managerId},</if>
            <if test="remark != null">`remark` = #{remark},</if>
        </set>
        where `id` = #{id}
    </update>

    <select id="getAll" resultMap="BaseResultMap">
        select `id`, `create_time`, `update_time`, `trade_no`, `income`, `trade_type`, `amount`, `balance`, manager_id,
        `remark` from client_account_trade
    </select>

    <select id="findById" parameterType="Long" resultMap="BaseResultMap">
        select `id`, `create_time`, `update_time`, `trade_no`, `income`, `trade_type`, `amount`, `balance`, manager_id,
        `remark` from client_account_trade where `id` = #{id}
    </select>

    <select id="countByIncome" parameterType="Integer" resultType="Integer">
        select count(*) from client_account_trade where `income` = #{income}
    </select>

    <select id="countBy" resultType="Integer">
        select count(*) from client_account_trade where `income` = #{income}
        <if test="corpId != null">and `id` = #{corpId}</if>
    </select>
</mapper>