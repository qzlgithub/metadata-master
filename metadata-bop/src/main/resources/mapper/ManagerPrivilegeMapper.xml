<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mingdong.bop.domain.mapper.ManagerPrivilegeMapper">
    <resultMap id="BaseResultMap" type="ManagerPrivilege">
        <id column="id" property="id" jdbcType="BIGINT" />
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
        <result column="manager_id" property="managerId" jdbcType="BIGINT" />
        <result column="privilege_id" property="privilegeId" jdbcType="BIGINT" />
    </resultMap>

    <insert id="add" parameterType="ManagerPrivilege">
        insert into `manager_privilege`
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">`id`,</if>
            <if test="createTime != null">`create_time`,</if>
            <if test="updateTime != null">`update_time`,</if>
            <if test="managerId != null">`manager_id`,</if>
            <if test="privilegeId != null">`privilege_id`,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">#{id},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateTime != null">#{updateTime},</if>
            <if test="managerId != null">#{managerId},</if>
            <if test="privilegeId != null">#{privilegeId},</if>
        </trim>
    </insert>

    <insert id="addList" parameterType="List">
        insert into
            `manager_privilege`
            (`create_time`, `update_time`, `manager_id`, `privilege_id`)
        values
            <foreach collection="list" item="item" separator=",">
                (#{item.createTime}, #{item.updateTime}, #{item.managerId}, #{item.privilegeId})
            </foreach>
    </insert>

    <update id="updateById" parameterType="ManagerPrivilege">
        update `manager_privilege`
        set `create_time`            = #{createTime}, `update_time` = #{updateTime}, `manager_id` =
        #{managerId}, `privilege_id` = #{privilegeId}
        where `id` = #{id}
    </update>

    <update id="updateSkipNull" parameterType="ManagerPrivilege">
        update `manager_privilege`
        <set>
            <if test="createTime != null">`create_time` = #{createTime},</if>
            <if test="updateTime != null">`update_time` = #{updateTime},</if>
            <if test="managerId != null">`manager_id` = #{managerId},</if>
            <if test="privilegeId != null">`privilege_id` = #{privilegeId},</if>
        </set>
        where `id` = #{id}
    </update>

    <select id="getAll" resultMap="BaseResultMap">
        select
            `id`, `create_time`, `update_time`, `manager_id`, `privilege_id`
        from `manager_privilege`
    </select>

    <select id="findById" parameterType="Long" resultMap="BaseResultMap">
        select
            `id`, `create_time`, `update_time`, `manager_id`, `privilege_id`
        from `manager_privilege`
        where `id` =
              #{id}
    </select>

    <select id="getPrivilegeIdListByManager" parameterType="Long" resultMap="BaseResultMap">
        select `privilege_id`
        from `manager_privilege`
        where `manager_id` = #{managerId}
    </select>

    <delete id="deleteByManager" parameterType="Long">
        delete from `manager_privilege`
        where `manager_id` = #{managerId}
    </delete>
</mapper>