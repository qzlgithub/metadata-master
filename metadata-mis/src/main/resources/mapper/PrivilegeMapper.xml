<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mingdong.mis.domain.mapper.PrivilegeMapper">
    <resultMap id="BaseResultMap" type="Privilege">
        <id column="id" property="id" jdbcType="BIGINT" />
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
        <result column="name" property="name" jdbcType="VARCHAR" />
        <result column="seq_no" property="seqNo" jdbcType="INTEGER" />
        <result column="level" property="level" jdbcType="INTEGER" />
        <result column="parent_id" property="parentId" jdbcType="BIGINT" />
        <result column="enabled" property="enabled" jdbcType="TINYINT" />
    </resultMap>

    <insert id="add" parameterType="Privilege">
        insert into privilege
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">`id`,</if>
            <if test="createTime != null">`create_time`,</if>
            <if test="updateTime != null">`update_time`,</if>
            <if test="name != null">`name`,</if>
            <if test="seqNo != null">`seq_no`,</if>
            <if test="level != null">`level`,</if>
            <if test="parentId != null">`parent_id`,</if>
            <if test="enabled != null">`enabled`,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">#{id},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateTime != null">#{updateTime},</if>
            <if test="name != null">#{name},</if>
            <if test="seqNo != null">#{seqNo},</if>
            <if test="level != null">#{level},</if>
            <if test="parentId != null">#{parentId},</if>
            <if test="enabled != null">#{enabled},</if>
        </trim>
    </insert>

    <update id="updateById" parameterType="Privilege">
        update privilege
        set `create_time` = #{createTime}, `update_time` = #{updateTime}, `name` = #{name}, `seq_no` =
        #{seqNo}, `level` = #{level}, `parent_id` = #{parentId}, `enabled` = #{enabled}
        where `id` = #{id}
    </update>

    <update id="updateSkipNull" parameterType="Privilege">
        update privilege
        <set>
            <if test="createTime != null">`create_time` = #{createTime},</if>
            <if test="updateTime != null">`update_time` = #{updateTime},</if>
            <if test="name != null">`name` = #{name},</if>
            <if test="seqNo != null">`seq_no` = #{seqNo},</if>
            <if test="level != null">`level` = #{level},</if>
            <if test="parentId != null">`parent_id` = #{parentId},</if>
            <if test="enabled != null">`enabled` = #{enabled},</if>
        </set>
        where `id` = #{id}
    </update>

    <select id="findById" parameterType="Long" resultMap="BaseResultMap">
        select
            `id`, `create_time`, `update_time`, `name`, `seq_no`, `level`, `parent_id`, `enabled`
        from privilege
        where `id` = #{id}
    </select>

    <select id="getAll" resultMap="BaseResultMap">
        select
            `id`, `create_time`, `update_time`, `name`, `seq_no`, `level`, `parent_id`, `enabled`
        from privilege
    </select>
    <select id="countAll" resultType="Integer">
        select count(*)
        from privilege
    </select>

    <select id="getByParent" parameterType="Long" resultMap="BaseResultMap">
        select
            `id`, `name`, `seq_no`, `enabled`
        from privilege
        where `parent_id` = #{parentId}
    </select>

    <select id="getParentIdByChildId" parameterType="List" resultMap="BaseResultMap">
        select `parent_id` from `privilege` where `id` in
        <foreach collection="privilegeIdList" item="item" open="(" close=")" separator=",">
            #{item}
        </foreach>
    </select>

    <select id="getTopListByRole" parameterType="Long" resultMap="BaseResultMap">
        select
            p.`id`, p.`create_time`, p.`update_time`, p.`name`, p.`seq_no`, p.`level`, p.`parent_id`, p.`enabled`
        from `role_privilege` rp
            join `privilege` p
                on rp.`privilege_id` = p.`id` and p.`level` = 1
        where rp.`role_id` = #{roleId};
    </select>

    <select id="getByParentAndStatus" resultMap="BaseResultMap">
        select `id`,`name`, `enabled` from `privilege`
        <where>
            <if test="parentId != null">`parent_id` = #{parentId}</if>
            <if test="enabled != null">and `enabled` = #{enabled}</if>
        </where>
        order by `seq_no` asc
    </select>

    <select id="getListByLevel" parameterType="int" resultMap="BaseResultMap">
        select
            `id`, `name`
        from `privilege`
        where `level` &lt;= #{level}
    </select>
</mapper>