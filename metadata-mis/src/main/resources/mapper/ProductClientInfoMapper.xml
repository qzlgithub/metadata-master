<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mingdong.mis.domain.mapper.ProductClientInfoMapper">
    <resultMap id="BaseResultMap" type="ProductClientInfo">
        <result column="product_id" property="productId" jdbcType="BIGINT" />
        <result column="product_name" property="productName" jdbcType="VARCHAR" />
        <result column="code" property="code" jdbcType="VARCHAR" />
        <result column="type_name" property="typeName" jdbcType="VARCHAR" />
        <result column="app_id" property="appId" jdbcType="VARCHAR" />
        <result column="client_product_id" property="clientProductId" jdbcType="BIGINT" />
        <result column="bill_plan" property="billPlan" jdbcType="TINYINT" />
        <result column="start_date" property="startDate" jdbcType="TIMESTAMP" />
        <result column="end_date" property="endDate" jdbcType="TIMESTAMP" />
        <result column="amount" property="amount" jdbcType="DECIMAL" />
        <result column="balance" property="balance" jdbcType="DECIMAL" />
        <result column="unit_amt" property="unitAmt" jdbcType="DECIMAL" />
        <result column="arrear_time" property="arrearTime" jdbcType="TIMESTAMP" />
        <result column="remark" property="remark" jdbcType="VARCHAR" />
        <result column="content" property="content" jdbcType="LONGVARCHAR" />
    </resultMap>

    <select id="getListByClient" parameterType="Long" resultMap="BaseResultMap">
        select
            p.`id`           as product_id,
            p.`name`         as product_name,
            p.`code`         as code,
            pt.`name`        as type_name,
            cp.`app_id`      as app_id,
            cp.`id`          as client_product_id,
            cp.`bill_plan`   as bill_plan,
            pr.`start_date`  as start_date,
            pr.`end_date`    as end_date,
            pr.`amount`      as amount,
            pr.`balance`     as balance,
            pr.`unit_amt`    as unit_amt,
            pr.`update_time` as arrear_time,
            p.`remark`       as remark
        from `product` p
            left join `client_product` cp
                on p.`id` = cp.`product_id` and cp.`client_id` = #{clientId}
            left join `product_recharge` pr
                on cp.`latest_recharge_id` = pr.`id`
        where p.`enabled` = 1
    </select>

    <select id="countInfoListBy" resultType="Integer">
        select
        count(p.`id`)
        from `product` p
        <if test="isOpen == null">left join `client_product` cp</if>
        <if test="isOpen != null and isOpen == 0">left join `client_product` cp</if>
        <if test="isOpen != null and isOpen == 1">inner join `client_product` cp</if>
        on p.`id` = cp.`product_id` and cp.`client_id` = #{clientId}
        left join `product_recharge` pr
        on cp.`latest_recharge_id` = pr.`id`
        where p.`enabled` = 1
        <if test="selectedType != null">
            and p.`type`
            <foreach  collection="selectedType" item="typeId" open="in (" close=")" separator=",">
                #{typeId}
            </foreach>
        </if>
    </select>

    <select id="getInfoListBy" resultMap="BaseResultMap">
        select
        p.`id`           as product_id,
        p.`name`         as product_name,
        p.`code`         as code,
        pt.`name`        as type_name,
        cp.`app_id`      as app_id,
        cp.`id`          as client_product_id,
        cp.`bill_plan`   as bill_plan,
        pr.`start_date`  as start_date,
        pr.`end_date`    as end_date,
        pr.`amount`      as amount,
        pr.`balance`     as balance,
        pr.`unit_amt`    as unit_amt,
        pr.`update_time` as arrear_time,
        p.`remark`       as remark
        from `product` p
        <if test="isOpen == null">left join `client_product` cp</if>
        <if test="isOpen != null and isOpen == 0">left join `client_product` cp</if>
        <if test="isOpen != null and isOpen == 1">inner join `client_product` cp</if>
        on p.`id` = cp.`product_id` and cp.`client_id` = #{clientId}
        left join `product_recharge` pr
        on cp.`latest_recharge_id` = pr.`id`
        where p.`enabled` = 1
        <if test="selectedType != null">
            and p.`type`
            <foreach  collection="selectedType" item="typeId" open="in (" close=")" separator=",">
                #{typeId}
            </foreach>
        </if>
    </select>

    <select id="getClientProductInfo" parameterType="Long" resultMap="BaseResultMap">
        select
            p.`id`          as product_id,
            p.`name`        as product_name,
            cp.`app_id`     as app_id,
            cp.`id`         as client_product_id,
            cp.`bill_plan`  as bill_plan,
            pr.`start_date` as start_date,
            pr.`end_date`   as end_date,
            pr.`amount`     as amount,
            pr.`balance`    as balance,
            pr.`unit_amt`   as unit_amt,
            p.`remark`      as remark,
            pt.`content`    as content
        from `client_product` cp
            left join `product` p
                on cp.`product_id` = p.`id`
            left join `product_txt` pt
                on cp.`product_id` = pt.`id`
            left join `product_recharge` pr
                on cp.`latest_recharge_id` = pr.`id`
        where cp.`id` = #{id}
    </select>

    <select id="getClientDictList" parameterType="Long" resultMap="BaseResultMap">
        select
            p.`id`   as product_id,
            p.`name` as product_name
        from `client_product` cp
            left join `product` p
                on cp.`product_id` = p.`id`
        where cp.`client_id` = #{clientId}
    </select>
</mapper>