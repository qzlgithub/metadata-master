<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mingdong.mis.domain.mapper.StatsClientMapper">
    <resultMap id="BaseResultMap" type="StatsDateInfo">
        <result column="date" property="date" jdbcType="TIMESTAMP" />
        <result column="count" property="count" jdbcType="INTEGER" />
        <result column="miss_count" property="missCount" jdbcType="INTEGER" />
        <result column="fee" property="fee" jdbcType="DECIMAL" />
    </resultMap>

    <resultMap id="StatsRechargeInfoMap" type="StatsRechargeInfo">
        <result column="recharge_type" property="rechargeType" jdbcType="INTEGER" />
        <result column="amount" property="amount" jdbcType="DECIMAL" />
    </resultMap>

    <select id="statsRechargeByData" resultMap="StatsRechargeInfoMap">
        select
            `recharge_type` as recharge_type,
            sum(`amount`)   as amount
        from recharge
        <where>
            <if test="fromDate != null">`create_time` >= #{fromDate}</if>
            <if test="toDate != null">and `create_time` &lt;= #{toDate}</if>
        </where>
        group by recharge_type, amount
    </select>

    <select id="getAllClientCount" resultType="Integer">
        select count(*)
        from `client`
    </select>

    <select id="getClientCountByDate" resultType="Integer">
        select count(*) from `client` where 1=1
        <if test="start != null">
            and `create_time` &gt;= #{start}
        </if>
        <if test="end != null">
            and `create_time` &lt;= #{end}
        </if>
    </select>

    <select id="getClientRechargeByDate" resultType="BigDecimal">
        select sum(`amount`) from `recharge` where 1=1
        <if test="start != null">
            and `create_time` &gt;= #{start}
        </if>
        <if test="end != null">
            and `create_time` &lt;= #{end}
        </if>
    </select>

    <select id="getClientRechargeAll" resultType="BigDecimal">
        select sum(`amount`)
        from `recharge`
    </select>

    <select id="countClientRechargeByDate" resultType="Integer">
        select count(`id`) from `recharge` where 1=1
        <if test="start != null">
            and `create_time` &gt;= #{start}
        </if>
        <if test="end != null">
            and `create_time` &lt;= #{end}
        </if>
    </select>

    <select id="getRequestListStats" resultMap="BaseResultMap">
        select date_format(ar.`create_time`,"%Y-%m-%d") as date, count(ar.`id`) as count, count(case when ar.`hit` = 0
        then ar.`hit` end) as miss_count from `api_req` ar left join `client` c on ar.`client_id` = c.`id`
        <where>
            <if test="keyword != null">
                (c.`corp_name` like '%${keyword}%' or c.`short_name` like '%${keyword}%')
            </if>
            <if test="productId != null">and ar.`product_id` = #{productId}</if>
            <if test="fromDate != null">and ar.`create_time` >= #{fromDate}</if>
            <if test="toDate != null">and ar.`create_time` &lt;= #{toDate}</if>
        </where>
        group by date_format(ar.`create_time`,"%Y-%m-%d") order by date_format(ar.`create_time`,"%Y-%m-%d") asc
    </select>

    <select id="getRevenueListStats" resultMap="BaseResultMap">
        select date_format(ar.`create_time`,"%Y-%m-%d") as date, sum(ar.`fee`) as fee from `api_req` ar left join
        `client` c on ar.`client_id` = c.`id`
        <where>
            <if test="fromDate != null">ar.`create_time` >= #{fromDate}</if>
            <if test="toDate != null">and ar.`create_time` &lt;= #{toDate}</if>
        </where>
        group by date_format(ar.`create_time`,"%Y-%m-%d") order by date_format(ar.`create_time`,"%Y-%m-%d") asc
    </select>

</mapper>