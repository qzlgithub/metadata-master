<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mingdong.mis.domain.mapper.ApiReqInfoMapper">
    <resultMap id="BaseResultMap" type="ApiReqInfo">
        <result column="id" property="id" jdbcType="BIGINT" />
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
        <result column="user_id" property="userId" jdbcType="BIGINT" />
        <result column="client_id" property="clientId" jdbcType="BIGINT" />
        <result column="product_id" property="productId" jdbcType="BIGINT" />
        <result column="hit" property="hit" jdbcType="TINYINT" />
        <result column="request_ip" property="requestIp" jdbcType="VARCHAR" />
        <result column="bill_plan" property="billPlan" jdbcType="TINYINT" />
        <result column="fee" property="fee" jdbcType="DECIMAL" />
        <result column="balance" property="balance" jdbcType="DECIMAL" />
        <result column="corp_name" property="corpName" jdbcType="VARCHAR" />
        <result column="short_name" property="shortName" jdbcType="VARCHAR" />
        <result column="username" property="username" jdbcType="VARCHAR" />
        <result column="product_name" property="productName" jdbcType="VARCHAR" />
    </resultMap>

    <select id="getListBy" resultMap="BaseResultMap">
        select
        ar.`id`          as id,
        ar.`create_time` as create_time,
        ar.`update_time` as update_time,
        ar.`user_id` as user_id,
        ar.`client_id` as client_id,
        ar.`product_id` as product_id,
        ar.`hit`         as hit,
        ar.`request_ip`     as request_ip,
        ar.`bill_plan`     as bill_plan,
        ar.`fee`     as fee,
        ar.`balance`     as balance,
        c.`corp_name`    as corp_name,
        c.`short_name`   as short_name,
        cu.`username`    as username,
        p.`name`         as product_name
        from `api_req` ar
        left join `client` c
        on ar.`client_id` = c.`id`
        left join `client_user` cu
        on c.`primary_user_id` = cu.`id`
        left join `product` p
        on ar.`product_id` = p.`id`
        <where>
            <if test="clientId != null">ar.`client_id` = #{clientId}</if>
            <if test="productId != null">and ar.`product_id` = #{productId}</if>
            <if test="startDate != null">and ar.`create_time` >= #{startDate}</if>
            <if test="endDate != null">and ar.`create_time` &lt;= #{endDate}</if>
        </where>
        order by ar.`create_time` desc
    </select>

    <select id="countClientBillListBy" resultType="Integer">
        select
        count(ar.`id`)
        from `api_req` ar
        left join `client` c
        on ar.`client_id` = c.`id`
        left join `client_user` cu
        on c.`primary_user_id` = cu.`id`
        left join `product` p
        on ar.`product_id` = p.`id`
        <where>
            <if test="shortName != null">c.`short_name` = #{shortName}</if>
            <if test="typeId != null">and ar.`bill_plan` = #{typeId}</if>
            <if test="productId != null">and ar.`product_id` >= #{productId}</if>
            <if test="startDate != null">and ar.`create_time` >= #{startDate}</if>
            <if test="endDate != null">and ar.`create_time` &lt;= #{endDate}</if>
        </where>
        order by ar.`create_time` desc
    </select>

    <select id="getClientBillListBy" resultMap="BaseResultMap">
        select
        ar.`id`          as id,
        ar.`create_time` as create_time,
        ar.`update_time` as update_time,
        ar.`user_id` as user_id,
        ar.`client_id` as client_id,
        ar.`product_id` as product_id,
        ar.`hit`         as hit,
        ar.`request_ip`     as request_ip,
        ar.`bill_plan`     as bill_plan,
        ar.`fee`     as fee,
        ar.`balance`     as balance,
        c.`corp_name`    as corp_name,
        c.`short_name`   as short_name,
        cu.`username`    as username,
        p.`name`         as product_name
        from `api_req` ar
        left join `client` c
        on ar.`client_id` = c.`id`
        left join `client_user` cu
        on c.`primary_user_id` = cu.`id`
        left join `product` p
        on ar.`product_id` = p.`id`
        <where>
            <if test="shortName != null">c.`short_name` = #{shortName}</if>
            <if test="typeId != null">and ar.`bill_plan` = #{typeId}</if>
            <if test="productId != null">and ar.`product_id` >= #{productId}</if>
            <if test="startDate != null">and ar.`create_time` >= #{startDate}</if>
            <if test="endDate != null">and ar.`create_time` &lt;= #{endDate}</if>
        </where>
        order by ar.`create_time` desc
    </select>

    <select id="getClientBillFeeSum" resultType="BigDecimal">
        select
        sum(ar.`fee`)
        from `api_req` ar
        left join `client` c
        on ar.`client_id` = c.`id`
        left join `client_user` cu
        on c.`primary_user_id` = cu.`id`
        left join `product` p
        on ar.`product_id` = p.`id`
        <where>
            <if test="shortName != null">c.`short_name` = #{shortName}</if>
            <if test="typeId != null">and ar.`bill_plan` = #{typeId}</if>
            <if test="productId != null">and ar.`product_id` >= #{productId}</if>
            <if test="startDate != null">and ar.`create_time` >= #{startDate}</if>
            <if test="endDate != null">and ar.`create_time` &lt;= #{endDate}</if>
        </where>
        order by ar.`create_time` desc
    </select>


</mapper>